/* tslint:disable */
/* eslint-disable */
/**
 * Room Booking Service
 * Innopolis University room booking service API.
 *
 * The version of the OpenAPI document: 0.1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { Room } from './Room';
import {
    RoomFromJSON,
    RoomFromJSONTyped,
    RoomToJSON,
} from './Room';

/**
 * 
 * @export
 * @interface Booking
 */
export interface Booking {
    /**
     * 
     * @type {any}
     * @memberof Booking
     */
    id: any | null;
    /**
     * 
     * @type {any}
     * @memberof Booking
     */
    title: any | null;
    /**
     * 
     * @type {any}
     * @memberof Booking
     */
    start: any | null;
    /**
     * 
     * @type {any}
     * @memberof Booking
     */
    end: any | null;
    /**
     * 
     * @type {Room}
     * @memberof Booking
     */
    room: Room;
    /**
     * 
     * @type {any}
     * @memberof Booking
     */
    ownerEmail: any | null;
}

/**
 * Check if a given object implements the Booking interface.
 */
export function instanceOfBooking(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "id" in value;
    isInstance = isInstance && "title" in value;
    isInstance = isInstance && "start" in value;
    isInstance = isInstance && "end" in value;
    isInstance = isInstance && "room" in value;
    isInstance = isInstance && "ownerEmail" in value;

    return isInstance;
}

export function BookingFromJSON(json: any): Booking {
    return BookingFromJSONTyped(json, false);
}

export function BookingFromJSONTyped(json: any, ignoreDiscriminator: boolean): Booking {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'id': json['id'],
        'title': json['title'],
        'start': json['start'],
        'end': json['end'],
        'room': RoomFromJSON(json['room']),
        'ownerEmail': json['owner_email'],
    };
}

export function BookingToJSON(value?: Booking | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'id': value.id,
        'title': value.title,
        'start': value.start,
        'end': value.end,
        'room': RoomToJSON(value.room),
        'owner_email': value.ownerEmail,
    };
}

